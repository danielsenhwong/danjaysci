# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-06-15 21:08
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('institutions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('manufacturer', models.CharField(help_text='The brand or name of the company that makes this item, not who we bought it from. For example, we frequently buy Corning-branded 10-cm tissue culture dishes from Fisher Scientific, so the manufacturer here is Corning, and the vendor is Fisher Scientific. In another case, we buy Abcam antibodies directly from Abcam, so the manufacturer and vendor are both Abcam.', max_length=64)),
                ('catalog_number', models.CharField(max_length=32)),
                ('description', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['name', 'manufacturer'],
            },
        ),
        migrations.CreateModel(
            name='ItemPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_catalog_number', models.CharField(max_length=32)),
                ('quantity', models.PositiveSmallIntegerField()),
                ('quantity_unit', models.CharField(max_length=32)),
                ('min_quantity_req', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='minimum quantity required for quoted price')),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('date', models.DateField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='supplies.Item')),
            ],
            options={
                'ordering': ['item', '-date'],
            },
        ),
        migrations.CreateModel(
            name='ItemRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_requested', models.DateField(auto_now_add=True)),
                ('quantity', models.PositiveSmallIntegerField()),
                ('quantity_unit', models.CharField(max_length=16)),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('priority', models.IntegerField(choices=[(0, 'Urgent! (Needed it yesterday)'), (1, 'High (Need it ASAP)'), (2, 'Medium (Need with within a week'), (3, 'Low (Need it sometime soon)'), (9, 'Wishlist (Thinking about it)')], default=2)),
                ('suggested_vendor', models.CharField(blank=True, max_length=32)),
                ('intended_use', models.TextField()),
                ('substitutions_allowed', models.BooleanField(default=True)),
                ('denied', models.BooleanField(default=False)),
                ('item', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='supplies.Item')),
            ],
            options={
                'ordering': ['-denied', 'priority', 'date_requested'],
            },
        ),
        migrations.CreateModel(
            name='LineItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_ordered', models.PositiveSmallIntegerField()),
                ('item_price', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='supplies.ItemPrice')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_method', models.IntegerField(choices=[(1, 'Tufts Marketplace'), (2, 'Website'), (3, 'Other')])),
                ('order_number', models.CharField(blank=True, max_length=32)),
                ('invoice_number', models.CharField(blank=True, max_length=32)),
                ('shipping_cost', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=8)),
                ('date_ordered', models.DateField()),
                ('date_received', models.DateField(blank=True, null=True)),
                ('charge_to', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='institutions.Funding')),
                ('placed_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='placed_orders', to=settings.AUTH_USER_MODEL)),
                ('received_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='received_orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_ordered'],
            },
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=32)),
                ('valid_from', models.DateField()),
                ('valid_until', models.DateField()),
                ('contact_person', models.CharField(max_length=128)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=32)),
                ('items', models.ManyToManyField(to='supplies.Item')),
            ],
            options={
                'ordering': ['-valid_until', 'vendor'],
            },
        ),
        migrations.CreateModel(
            name='SupplyCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('special_inventory_required', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Supply categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('contact_person', models.CharField(blank=True, max_length=128, null=True)),
                ('contact_title', models.CharField(blank=True, max_length=128, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=32, null=True)),
                ('billing_method', models.IntegerField(choices=[(1, 'Tufts Marketplace'), (2, 'Credit Card'), (3, 'Net 30'), (4, 'Other E-Procurement'), (5, 'Mailed invoice')])),
                ('website', models.URLField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WebAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=64)),
                ('password', models.CharField(max_length=64)),
                ('associated_email', models.EmailField(max_length=254)),
                ('website', models.CharField(blank=True, max_length=128)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='supplies.Vendor')),
            ],
            options={
                'ordering': ['vendor'],
            },
        ),
        migrations.AddField(
            model_name='quote',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='supplies.Vendor'),
        ),
        migrations.AddField(
            model_name='order',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='supplies.Vendor'),
        ),
        migrations.AddField(
            model_name='lineitem',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='supplies.Order'),
        ),
        migrations.AddField(
            model_name='itemrequest',
            name='order_line_item',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='fulfilling_request', to='supplies.LineItem'),
        ),
        migrations.AddField(
            model_name='itemrequest',
            name='ordered_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='fulfilled_requests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='itemrequest',
            name='requested_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='requested_orders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='itemprice',
            name='quote',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='supplies.Quote'),
        ),
        migrations.AddField(
            model_name='itemprice',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='supplies.Vendor'),
        ),
        migrations.AddField(
            model_name='item',
            name='category',
            field=models.ManyToManyField(to='supplies.SupplyCategory'),
        ),
    ]
